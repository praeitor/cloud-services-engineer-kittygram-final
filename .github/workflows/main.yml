name: KITTYGRAM CICD workflow

on:
  push:
    branches:
      - main

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip 
          pip install -r backend/requirements.txt
      - name: Run backend tests
        run: |
          python backend/manage.py test

  push-docker-image:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: DockerHub login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker images
        run: |
          docker build -t praeitor/kittygram_backend ./backend
          docker push praeitor/kittygram_backend
          docker build -t praeitor/kittygram_frontend ./frontend
          docker push praeitor/kittygram_frontend
          docker build -t praeitor/kittygram_gateway ./nginx
          docker push praeitor/kittygram_gateway

  deploy:
    needs: push-docker-image
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to server
        uses: appleboy/scp-action@v0.1.5
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "./docker-compose.production.yml"
          target: "~/kittygram/"
      - name: Run deployment script
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ~/kittygram
            docker-compose pull
            docker-compose up -d

  auto_tests:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Run auto-tests
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ~/kittygram
            docker exec backend python manage.py test
            docker exec frontend npm test

  telegram-notify:
    needs: auto_tests
    runs-on: ubuntu-latest
    steps:
      - name: Notify in Telegram
        uses: appleboy/telegram-action@v0.0.5
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            Kittygram successfully deployed and passed all tests!